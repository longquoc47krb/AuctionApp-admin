{"version":3,"file":"static/js/562.9d1f44db.chunk.js","mappings":"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","sources":["components/Table.jsx","configs/columns.js","api/configs/product.js","api/services/productServices.js","pages/Products.jsx"],"sourcesContent":["import { Table as AntdTable } from \"antd\";\r\n\r\nconst onChange = (pagination, filters, sorter, extra) => {\r\n  console.log(\"params\", pagination, filters, sorter, extra);\r\n};\r\nconst Table = (props) => {\r\n  const { dataSource, columns } = props;\r\n  return (\r\n    <AntdTable\r\n      columns={columns}\r\n      dataSource={dataSource}\r\n      onChange={onChange}\r\n      pagination={{\r\n        pageSize: 5,\r\n      }}\r\n      bordered\r\n    />\r\n  );\r\n};\r\nexport default Table;\r\n","import { convertMongodbTimeToString, Sorter } from \"./../utils/utils\";\r\nimport Fallback from \"./../assets/fallback.jpg\";\r\nconst direction = [\"ascend\", \"descend\", \"\"];\r\nexport const categoryColumns = [\r\n  {\r\n    title: \"Tên thể loại\",\r\n    dataIndex: \"name\",\r\n  },\r\n  {\r\n    title: \"Mô tả\",\r\n    dataIndex: \"description\",\r\n  },\r\n];\r\nexport const accountColumns = [\r\n  {\r\n    title: \"Avatar\",\r\n    dataIndex: \"avatar\",\r\n    // specify the condition of filtering result\r\n    // here is that finding the name started with `value`\r\n    render: (pic) => (\r\n      <img src={Fallback} className=\"h-[2.5rem] w-auto\" alt=\"avatar\" />\r\n    ),\r\n    width: 50,\r\n  },\r\n  {\r\n    title: \"Tên\",\r\n    dataIndex: \"fullName\",\r\n    // specify the condition of filtering result\r\n    // here is that finding the name started with `value`\r\n    onFilter: (value, record) => record.fullName.indexOf(value) === 0,\r\n    sorter: (a, b) => a.fullName.length - b.fullName.length,\r\n    sortDirections: direction,\r\n  },\r\n  {\r\n    title: \"Email\",\r\n    dataIndex: \"email\",\r\n    defaultSortOrder: \"descend\",\r\n    onFilter: (value, record) => record.email.indexOf(value) === 0,\r\n    sorter: (a, b) => a.email - b.email,\r\n    sortDirections: direction,\r\n  },\r\n];\r\nexport const productColumns = [\r\n  {\r\n    title: \"Tên sản phẩm\",\r\n    dataIndex: \"auctionName\",\r\n    onFilter: (value, record) => record.auctionName.indexOf(value) === 0,\r\n    sorter: (a, b) => Sorter.sort(a.auctionName, b.auctionName),\r\n    sortDirections: direction,\r\n  },\r\n  {\r\n    title: \"Loại sản phẩm\",\r\n    dataIndex: \"categoryName\",\r\n    render: (text) => <span>{text}</span>,\r\n  },\r\n  {\r\n    title: \"Thời gian bắt đầu đấu giá\",\r\n    dataIndex: \"startAuctionTime\",\r\n    render: (text) => <span>{convertMongodbTimeToString(text)}</span>,\r\n  },\r\n  {\r\n    title: \"Thời gian kết thúc đấu giá\",\r\n    dataIndex: \"endAuctionTime\",\r\n    render: (text) => <span>{convertMongodbTimeToString(text)}</span>,\r\n  },\r\n  {\r\n    title: \"Chủ sở hữu\",\r\n    dataIndex: \"owner\",\r\n  },\r\n];\r\n","export const ProductAPI = {\r\n  getAllProduct: {\r\n    url: `/product/search`,\r\n    method: \"GET\",\r\n    params: {\r\n      size: 1000,\r\n    },\r\n  },\r\n};\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport httpRequest from \"../../services/httpRequest\";\r\nimport { ProductAPI } from \"../configs/product\";\r\n\r\nconst findAllProduct = async () => {\r\n  try {\r\n    const response = await httpRequest(ProductAPI.getAllProduct);\r\n    return response.productList;\r\n  } catch (err) {\r\n    return err.response.data;\r\n  }\r\n};\r\nexport const useFindAllProduct = () => {\r\n  return useQuery([\"findAllProduct\"], findAllProduct, {\r\n    staleTime: 0,\r\n  });\r\n};\r\n","import { Button, Input, Space, Spin } from \"antd\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Header } from \"../components\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { productColumns } from \"../configs/columns\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { useFindAllProduct } from \"../api/services/productServices\";\r\nimport Table from \"../components/Table\";\r\nconst Products = () => {\r\n  // console.log(events[0]);\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const { data, status } = useFindAllProduct();\r\n  // for table\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n  const searchInput = useRef(null);\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText(\"\");\r\n  };\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n      close,\r\n    }) => (\r\n      <div\r\n        style={{\r\n          padding: 8,\r\n        }}\r\n        onKeyDown={(e) => e.stopPropagation()}\r\n      >\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{\r\n            marginBottom: 8,\r\n            display: \"block\",\r\n          }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{\r\n              width: 90,\r\n            }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => clearFilters && handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{\r\n              width: 90,\r\n            }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({\r\n                closeDropdown: false,\r\n              });\r\n              setSearchText(selectedKeys[0]);\r\n              setSearchedColumn(dataIndex);\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              close();\r\n            }}\r\n          >\r\n            close\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined\r\n        style={{\r\n          color: filtered ? \"#1890ff\" : undefined,\r\n        }}\r\n      />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownOpenChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current?.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{\r\n            backgroundColor: \"#ffc069\",\r\n            padding: 0,\r\n          }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n  // end for table\r\n  const nameColumn = productColumns.find((e) => e.dataIndex === \"auctionName\");\r\n  Object.assign(nameColumn, getColumnSearchProps(\"auctionName\"));\r\n  return (\r\n    <div className=\"m-2 md:m-10 mt-24 p-2 md:p-10 bg-white rounded-3xl\">\r\n      <Header category={t(\"sider.management\")} title={t(\"sider.product\")} />\r\n\r\n      {status === \"loading\" ? (\r\n        <div className=\"w-full h-full flex items-center justify-center\">\r\n          <Spin />\r\n        </div>\r\n      ) : (\r\n        <Table columns={productColumns} dataSource={data.datas} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Products;\r\n"],"names":["onChange","pagination","filters","sorter","extra","console","log","props","dataSource","columns","pageSize","bordered","direction","categoryColumns","title","dataIndex","accountColumns","render","pic","src","className","alt","width","onFilter","value","record","fullName","indexOf","a","b","length","sortDirections","defaultSortOrder","email","productColumns","auctionName","Sorter","text","convertMongodbTimeToString","ProductAPI","url","method","params","size","findAllProduct","httpRequest","response","productList","data","t","useTranslation","useNavigate","useQuery","staleTime","status","useState","searchText","setSearchText","searchedColumn","setSearchedColumn","searchInput","useRef","handleSearch","selectedKeys","confirm","nameColumn","e","Object","assign","filterDropdown","setSelectedKeys","clearFilters","close","style","padding","onKeyDown","stopPropagation","ref","placeholder","target","onPressEnter","marginBottom","display","type","onClick","icon","SearchOutlined","handleReset","closeDropdown","filterIcon","filtered","color","undefined","toString","toLowerCase","includes","onFilterDropdownOpenChange","visible","setTimeout","current","select","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","category","Table","datas"],"sourceRoot":""}