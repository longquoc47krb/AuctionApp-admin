{"version":3,"file":"static/js/144.ed8ba68a.chunk.js","mappings":"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","sources":["components/Alert.jsx","components/customField.jsx","components/ThreeLoading.jsx","utils/validate.js","pages/AdminLogin.jsx"],"sourcesContent":["// ** Third Party Components\r\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\r\nexport function AlertQuestion({ title, text, callback }) {\r\n  return Swal.fire({\r\n    title,\r\n    text,\r\n    icon: \"question\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#1F3E82\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"OK\",\r\n  }).then(callback);\r\n}\r\nexport function AlertSuccess({ title, text, callback }) {\r\n  return Swal.fire({\r\n    title,\r\n    text,\r\n    icon: \"success\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#1F3E82\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"OK\",\r\n  }).then(callback);\r\n}\r\nexport function AlertPopup({ title, text, timer = 3000, callback }) {\r\n  return Swal.fire({\r\n    title,\r\n    text,\r\n    icon: \"success\",\r\n    showConfirmButton: false,\r\n    timer: timer,\r\n  }).then(callback);\r\n}\r\nexport function AlertError({ title, text, callback }) {\r\n  return Swal.fire({\r\n    title,\r\n    text,\r\n    icon: \"error\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#1F3E82\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"OK\",\r\n  }).then(callback);\r\n}\r\nexport function AlertErrorPopup({ title, text, callback }) {\r\n  return Swal.fire({\r\n    title,\r\n    text,\r\n    icon: \"error\",\r\n    showConfirmButton: false,\r\n    timer: 2000,\r\n  }).then(callback);\r\n}\r\n","import {\r\n  DatePicker as AntdDatePicker,\r\n  Form,\r\n  Input as AntdInput,\r\n  Select as AntdSelect,\r\n  TimePicker as AntdTimePicker,\r\n} from \"antd\";\r\nimport { ErrorMessage } from \"formik\";\r\nimport React from \"react\";\r\nconst { Item } = Form;\r\nconst { Option } = AntdSelect;\r\nfunction Input(props) {\r\n  const {\r\n    field,\r\n    form,\r\n    label,\r\n    width,\r\n    type,\r\n    onChange: onChangeCustom,\r\n    disabled,\r\n  } = props;\r\n  const { value, onChange, onBlur, name } = field;\r\n  const { errors } = form;\r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n    var customEvent = {\r\n      target: {\r\n        value,\r\n        name,\r\n      },\r\n    };\r\n    onChange(customEvent);\r\n    if (onChangeCustom) {\r\n      onChangeCustom(value);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h1 className=\"text-primary text-xl font-semibold mb-4\">{label}</h1>\r\n      <AntdInput\r\n        disabled={disabled}\r\n        name={name}\r\n        value={value}\r\n        onBlur={onBlur}\r\n        status={errors[name] ? \"error\" : \"\"}\r\n        onChange={handleChange}\r\n        style={{ width: width }}\r\n        className={\"p-[0.5rem] mb-4\"}\r\n      />\r\n      <p className=\"error-message w-[100%]\">\r\n        <ErrorMessage name={name} />\r\n      </p>\r\n    </>\r\n  );\r\n}\r\nfunction DatePicker(props) {\r\n  const dateFormat = \"DD/MM/YYYY\";\r\n  const { form, field, label } = props;\r\n  const { value, onBlur, name } = field;\r\n  const { setFieldValue } = form;\r\n  return (\r\n    <>\r\n      <Item>\r\n        <h1 className=\"text-primary text-xl font-semibold mb-4\">{label}</h1>\r\n        <AntdDatePicker\r\n          className=\"w-full p-[0.5rem] mb-4\"\r\n          format={dateFormat}\r\n          name={name}\r\n          value={value}\r\n          onChange={(value) => setFieldValue(name, value)}\r\n          onBlur={onBlur}\r\n        />\r\n        <p className=\"error-message\">\r\n          <ErrorMessage name={name} />\r\n        </p>\r\n      </Item>\r\n    </>\r\n  );\r\n}\r\nfunction TimePicker(props) {\r\n  const format = \"HH:mm\";\r\n  const { form, field, label } = props;\r\n  const { value, onBlur, name } = field;\r\n  const { setFieldValue } = form;\r\n  return (\r\n    <>\r\n      <Item>\r\n        <h1 className=\"text-primary text-xl font-semibold mb-4\">{label}</h1>\r\n        <AntdTimePicker\r\n          className=\"w-full p-[0.5rem] mb-4\"\r\n          format={format}\r\n          name={name}\r\n          value={value}\r\n          onChange={(value) => setFieldValue(name, value)}\r\n          onBlur={onBlur}\r\n        />\r\n        <p className=\"error-message\">\r\n          <ErrorMessage name={name} />\r\n        </p>\r\n      </Item>\r\n    </>\r\n  );\r\n}\r\nfunction Select(props) {\r\n  const { field, form, label, mode, options, width } = props;\r\n  const { value, name, onChange } = field;\r\n  const { errors } = form;\r\n  const handleChange = (value) => {\r\n    const customEvent = {\r\n      target: {\r\n        name: name,\r\n        value: value,\r\n      },\r\n    };\r\n    onChange(customEvent);\r\n  };\r\n  return (\r\n    <>\r\n      <Item>\r\n        <h1 className=\"text-primary text-xl font-semibold mb-4\">{label}</h1>\r\n        <AntdSelect\r\n          showSearch\r\n          value={value}\r\n          style={{ height: \"2.5rem\" }}\r\n          status={errors[name] ? \"error\" : \"\"}\r\n          onChange={handleChange}\r\n          mode={mode}\r\n        >\r\n          {options.map((item, index) => (\r\n            <Option key={index + 1} value={item.value}>\r\n              {item.name}\r\n            </Option>\r\n          ))}\r\n        </AntdSelect>\r\n        <p className=\"error-message\">\r\n          <ErrorMessage name={name} />\r\n        </p>\r\n      </Item>\r\n    </>\r\n  );\r\n}\r\nfunction SelectHorizonal(props) {\r\n  const { field, form, label, mode, options, width } = props;\r\n  const { value, name, onChange } = field;\r\n  const { errors } = form;\r\n  const handleChange = (value) => {\r\n    const customEvent = {\r\n      target: {\r\n        name: name,\r\n        value: value,\r\n      },\r\n    };\r\n    onChange(customEvent);\r\n  };\r\n  return (\r\n    <>\r\n      <Item>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0 1rem\" }}>\r\n          <h1 className=\"text-primary text-xl font-semibold mb-4\">{label}</h1>\r\n          <AntdSelect\r\n            showSearch\r\n            value={value}\r\n            defaultValue={\"USD\"}\r\n            style={{ height: \"2.5rem\", width: \"auto\" }}\r\n            status={errors[name] ? \"error\" : \"\"}\r\n            onChange={handleChange}\r\n            mode={mode}\r\n          >\r\n            {options.map((item, index) => (\r\n              <Option key={index + 1} value={item.value}>\r\n                {item.name}\r\n              </Option>\r\n            ))}\r\n          </AntdSelect>\r\n        </div>\r\n        <p className=\"error-message\">\r\n          <ErrorMessage name={name} />\r\n        </p>\r\n      </Item>\r\n    </>\r\n  );\r\n}\r\nfunction InputPassword(props) {\r\n  const { field, form, label, uppercase, onChange: onChangeCustom } = props;\r\n  const { value, onChange, onBlur, name } = field;\r\n  const { errors } = form;\r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n    var customEvent = {\r\n      target: {\r\n        value: uppercase ? value.toUpperCase() : value,\r\n        name,\r\n      },\r\n    };\r\n    onChange(customEvent);\r\n    if (onChangeCustom) {\r\n      onChangeCustom(value);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h1 className=\"text-primary text-xl font-semibold mb-4\">{label}</h1>\r\n      <AntdInput.Password\r\n        name={name}\r\n        value={value}\r\n        onBlur={onBlur}\r\n        onChange={handleChange}\r\n        status={errors[name] ? \"error\" : \"\"}\r\n        className=\"p-[0.5rem] mb-4\"\r\n      />\r\n      <p className=\"error-message\">\r\n        <ErrorMessage name={name} />\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport {\r\n  Input,\r\n  InputPassword,\r\n  DatePicker,\r\n  TimePicker,\r\n  Select,\r\n  SelectHorizonal,\r\n};\r\n","import React from \"react\";\r\n\r\nfunction ThreeDotsLoading() {\r\n  return (\r\n    <div className=\"lds-ellipsis\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThreeDotsLoading;\r\n","import { t } from \"i18next\";\r\nimport * as Yup from \"yup\";\r\nimport \"yup-phone\";\r\nimport moment from \"moment\";\r\nimport constants from \"./constants\";\r\nconst { PATTERNS } = constants;\r\nexport const YupValidations = {\r\n  email: Yup.string()\r\n    .required(t(\"validate.email.required\"))\r\n    .email(t(\"validate.email.invalid\")),\r\n  name: Yup.string()\r\n    .required(t(\"validate.name.required\"))\r\n    .max(64, t(\"validate.name.max\")),\r\n  phone: Yup.string()\r\n    .phone(\"VN\", t(\"validate.phone.error\"))\r\n    .notRequired()\r\n    .nullable(),\r\n  password: Yup.string()\r\n    .required(t(\"validate.password\"))\r\n    .matches(PATTERNS.PASSWORD_PATTERN, {\r\n      message: t(\"validate.password.notMatch\"),\r\n    })\r\n    .max(20, t(\"validate.password.max\"))\r\n    .matches(PATTERNS.PASSWORD_LETTER, {\r\n      message: t(\"validate.password.letter\"),\r\n    })\r\n    .matches(PATTERNS.PASSWORD_NUMBER, {\r\n      message: \"validate.password.number\",\r\n    }),\r\n  confirmPassword: Yup.string()\r\n    .trim()\r\n    .oneOf([Yup.ref(\"password\")], t(\"validate.confirmPassword.invalid\"))\r\n    .required(t(\"validate.password.required\"))\r\n    .matches(PATTERNS.PASSWORD_PATTERN, {\r\n      message: t(\"validate.password.notMatch\"),\r\n    })\r\n    .max(20, t(\"validate.password.max\"))\r\n    .matches(PATTERNS.PASSWORD_LETTER, {\r\n      message: t(\"validate.password.letter\"),\r\n    })\r\n    .matches(PATTERNS.PASSWORD_NUMBER, {\r\n      message: t(\"validate.password.number\"),\r\n    }),\r\n  otp: Yup.string()\r\n    .required(t(\"validate.otp.required\"))\r\n    .min(6, t(\"validate.otp.min\")),\r\n  categories: Yup.array()\r\n    .required(t(\"validate.categories.required\"))\r\n    .max(2, t(\"validate.categories.max\")),\r\n  startingDate: Yup.date()\r\n    .required(\"Required\")\r\n    .min(moment(), \"Min date is today\")\r\n    .max(Yup.ref(\"endingDate\"), \"Max date is contract end\"),\r\n  endingDate: Yup.date()\r\n    .required(\"Required\")\r\n    .when(\r\n      \"startingDate\",\r\n      (startingDate, yupSchema) =>\r\n        startingDate &&\r\n        yupSchema.min(startingDate, \"Min date is contract start\")\r\n    ),\r\n  ticketList: Yup.array()\r\n    .of(\r\n      Yup.object().shape({\r\n        currency: Yup.string().required(t(\"validate.ticket.currency.required\")),\r\n        price: Yup.number().required(t(\"validate.ticket.price.required\")),\r\n        ticketName: Yup.string().required(t(\"validate.ticket.name.required\")),\r\n      })\r\n    )\r\n    .test(\"unique\", t(\"validate.ticket.unique\"), (lists) => {\r\n      let seen = new Set();\r\n      var hasDuplicates = lists.some(function (currentObject) {\r\n        return seen.size === seen.add(currentObject.ticketName).size;\r\n      });\r\n      return !hasDuplicates;\r\n    }),\r\n};\r\n","import { Col, Row } from \"antd\";\r\nimport { Field, Form, FormikProvider, useFormik } from \"formik\";\r\nimport { t } from \"i18next\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport accountServices from \"../api/services/accountServices\";\r\nimport authServices from \"../api/services/authServices\";\r\nimport { AlertErrorPopup, AlertPopup } from \"../components/Alert\";\r\nimport { Input, InputPassword } from \"../components/customField\";\r\nimport ThreeDotsLoading from \"../components/ThreeLoading\";\r\nimport { setToken, setUserProfile } from \"../redux/slices/accountSlice\";\r\nimport { isNotEmpty } from \"../utils/utils\";\r\nimport { YupValidations } from \"../utils/validate\";\r\nconst { findUser } = accountServices;\r\nconst { login } = authServices;\r\nfunction Login() {\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const formikLogin = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: Yup.object().shape({\r\n      email: YupValidations.email,\r\n      password: YupValidations.password,\r\n    }),\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    onSubmit: async (values) => {\r\n      const { email, password } = values;\r\n      setLoading(true);\r\n      const response = await login({ email, password });\r\n      console.log({ response });\r\n      showNotification(response.success);\r\n      if (isNotEmpty(response)) {\r\n        setLoading(false);\r\n      }\r\n      if (response.success === true) {\r\n        dispatch(setToken(response.access_token));\r\n      }\r\n    },\r\n  });\r\n  const showNotification = (success) => {\r\n    switch (success) {\r\n      case false:\r\n        return AlertErrorPopup({\r\n          title: t(\"popup.login.error\"),\r\n          text: t(\"popup.login.error\"),\r\n        });\r\n      case true:\r\n        setTimeout(() => {\r\n          navigate(\"/\");\r\n        }, 5000);\r\n        return AlertPopup({\r\n          title: t(\"popup.login.success\"),\r\n          text: t(\"popup.login.success\"),\r\n        });\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  const { handleSubmit } = formikLogin;\r\n  return (\r\n    <div className=\"flex justify-center items-center w-full h-screen bg-gray-400\">\r\n      <FormikProvider value={formikLogin}>\r\n        <Form className=\"auth-form\" onSubmit={handleSubmit}>\r\n          <Row className=\"leading-8\">\r\n            <h1 className=\"auth-title mb-2\">{t(\"pages.login\")}</h1>\r\n          </Row>\r\n          <Row\r\n            align=\"middle\"\r\n            style={{\r\n              height: \"auto\",\r\n              display: \"flex\",\r\n              alignContent: \"center\",\r\n            }}\r\n            gutter={[0, 8]}\r\n          >\r\n            <Col flex={4}>\r\n              <Field component={Input} name=\"email\" label=\"Email\" />\r\n            </Col>\r\n          </Row>\r\n          <Row\r\n            align=\"middle\"\r\n            style={{\r\n              height: \"auto\",\r\n              display: \"flex\",\r\n              alignContent: \"center\",\r\n            }}\r\n            gutter={[0, 8]}\r\n          >\r\n            <Col flex={4}>\r\n              <Field\r\n                component={InputPassword}\r\n                name=\"password\"\r\n                label={t(\"user.password\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Col span={24}>\r\n            <button className={\"primary-button\"} type=\"submit\">\r\n              {loading ? <ThreeDotsLoading /> : t(\"pages.login\")}\r\n            </button>\r\n          </Col>\r\n        </Form>\r\n      </FormikProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["AlertPopup","title","text","timer","callback","Swal","icon","showConfirmButton","then","AlertErrorPopup","Form","AntdSelect","Input","props","field","form","label","width","onChangeCustom","type","onChange","disabled","value","onBlur","name","errors","className","status","e","target","style","InputPassword","uppercase","customEvent","toUpperCase","PATTERNS","constants","YupValidations","email","Yup","required","t","max","phone","notRequired","nullable","password","matches","PASSWORD_PATTERN","message","PASSWORD_LETTER","PASSWORD_NUMBER","confirmPassword","trim","oneOf","otp","min","categories","startingDate","moment","endingDate","when","yupSchema","ticketList","of","shape","currency","price","ticketName","test","lists","seen","Set","some","currentObject","size","add","login","accountServices","authServices","useState","loading","setLoading","dispatch","useDispatch","navigate","useNavigate","formikLogin","useFormik","initialValues","validationSchema","validateOnChange","validateOnBlur","onSubmit","values","response","console","log","showNotification","success","isNotEmpty","setToken","access_token","setTimeout","handleSubmit","align","height","display","alignContent","gutter","flex","component","span"],"sourceRoot":""}